{"version":3,"file":"index.module.js","sources":["../src/index.js"],"sourcesContent":["import { Controller } from '@hotwired/stimulus';\n\nexport default class extends Controller {\n  static values = {\n    mode: String\n  };\n\n  get groups() {\n    return this.scope.findAllElements('[data-form-group-id]');\n  }\n\n  toggle(e) {\n    if (this.modeValue == 'disabled') {\n      this.groups.forEach(group => this.toggleDisabled(group, true));\n      this.findGroups(e.target).forEach(group => this.toggleDisabled(group, false));\n    } else {\n      this.groups.forEach(group => this.toggleVisible(group, false));\n      this.findGroups(e.target).forEach(group => this.toggleVisible(group, true));\n    }\n  }\n\n  toggleVisible(group, visible) {\n    group.style.display = visible ? '' : 'none';\n    group.classList.toggle('st-form-groups--visible', visible);\n  }\n\n  toggleDisabled(group, disabled) {\n    group.querySelectorAll('input, select, textarea, button').forEach(elem => elem.disabled = disabled);\n  }\n\n  findGroups(target) {\n    let id = this.getGroupID(target);\n    if (!id) {\n      return [];\n    } else {\n      return this.groups.filter(group => this.parseJSON(group.getAttribute('data-form-group-id')).includes(id));\n    }\n  }\n\n  getGroupID(target) {\n    if (target.matches('select')) {\n      return target.options[target.selectedIndex].value;\n    } else if (target.matches('input[type=radio]')) {\n      return target.value;\n    } else if (target.matches('input[type=checkbox]')) {\n      return target.checked;\n    }\n  }\n\n  parseJSON(ids) {\n    try {\n      return [].concat(JSON.parse(ids));\n    } catch(e) {\n      return [].concat(ids);\n    }\n  }\n}\n"],"names":["Controller","groups","scope","findAllElements","toggle","e","this","modeValue","forEach","group","toggleDisabled","findGroups","target","toggleVisible","visible","style","display","classList","disabled","querySelectorAll","elem","id","getGroupID","filter","parseJSON","getAttribute","includes","matches","options","selectedIndex","value","checked","ids","concat","JSON","parse","values","mode","String"],"mappings":"gEAE6BA,EAKvBC,aACF,YAAYC,MAAMC,gBAAgB,wBAGpCC,OAAOC,GACiB,YAAlBC,KAAKC,WACPD,KAAKL,OAAOO,QAAQC,GAASH,KAAKI,eAAeD,GAAO,IACxDH,KAAKK,WAAWN,EAAEO,QAAQJ,QAAQC,GAASH,KAAKI,eAAeD,GAAO,MAEtEH,KAAKL,OAAOO,QAAQC,GAASH,KAAKO,cAAcJ,GAAO,IACvDH,KAAKK,WAAWN,EAAEO,QAAQJ,QAAQC,GAASH,KAAKO,cAAcJ,GAAO,KAIzEI,cAAcJ,EAAOK,GACnBL,EAAMM,MAAMC,QAAUF,EAAU,GAAK,OACrCL,EAAMQ,UAAUb,OAAO,0BAA2BU,GAGpDJ,eAAeD,EAAOS,GACpBT,EAAMU,iBAAiB,mCAAmCX,QAAQY,GAAQA,EAAKF,SAAWA,GAG5FP,WAAWC,GACT,IAAIS,EAAKf,KAAKgB,WAAWV,GACzB,OAAKS,OAGSpB,OAAOsB,OAAOd,GAASH,KAAKkB,UAAUf,EAAMgB,aAAa,uBAAuBC,SAASL,IAF9F,GAMXC,WAAWV,GACT,OAAIA,EAAOe,QAAQ,UACVf,EAAOgB,QAAQhB,EAAOiB,eAAeC,MACnClB,EAAOe,QAAQ,qBACjBf,EAAOkB,MACLlB,EAAOe,QAAQ,wBACjBf,EAAOmB,eAIlBP,UAAUQ,GACR,IACE,MAAO,GAAGC,OAAOC,KAAKC,MAAMH,IAC5B,MAAM3B,GACN,MAAO,GAAG4B,OAAOD,OAlDdI,OAAS,CACdC,KAAMC"}