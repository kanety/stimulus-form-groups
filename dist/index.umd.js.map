{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["import { Controller } from '@hotwired/stimulus';\nimport './index.scss';\n\nexport default class extends Controller {\n  static values = {\n    mode: String\n  };\n\n  get groups() {\n    return this.scope.findAllElements('[data-form-group-id]');\n  }\n\n  get togglers() {\n    return this.context.bindingObserver.bindings\n               .filter(binding => binding.action.methodName == 'toggle')\n               .map(binding => binding.action.element);\n  }\n\n  connect() {\n    this.toggleGroups(false);\n  }\n\n  toggle(e) {\n    this.toggleGroups()\n  }\n\n  toggleGroups(transition = true) {\n    let onGroups = this.togglers.flatMap(toggler => this.findGroups(toggler));\n    this.groups.forEach(group => {\n      if (onGroups.includes(group)) {\n        this.on(group, transition);\n      } else {\n        this.off(group, transition);\n      }\n    });\n  }\n\n  on(group, transition = true) {\n    if (this.modeValue == 'disabled') {\n      this.enable(group);\n    } else {\n      this.show(group, transition);\n    }\n  }\n\n  off(group, transition = true) {\n    if (this.modeValue == 'disabled') {\n      this.disable(group);\n    } else {\n      this.hide(group, transition);\n    }\n  }\n\n  show(group, transition = true) {\n    if (group.classList.contains('st-form-groups__group--visible')) return;\n\n    if (transition) {\n      group.style.height = '0px';\n      group.removeEventListener('transitionend', this.transitionEnd);\n      group.addEventListener('transitionend', this.transitionEnd);\n      setTimeout(() => {\n        group.style.height = group.scrollHeight + 'px';\n      });\n    }\n\n    group.classList.add('st-form-groups__group--visible');\n  }\n\n  hide(group, transition = true) {\n    if (!group.classList.contains('st-form-groups__group--visible')) return;\n\n    if (transition) {\n      group.style.height = group.scrollHeight + 'px';\n      group.removeEventListener('transitionend', this.transitionEnd);\n      group.addEventListener('transitionend', this.transitionEnd);\n      setTimeout(() => {\n        group.style.height = '0px';\n      });\n    }\n\n    group.classList.remove('st-form-groups__group--visible');\n  }\n\n  transitionEnd(e) {\n    e.target.style.height = '';\n  }\n\n  enable(group) {\n    this.toggleDisabled(group, true);\n  }\n\n  disable(group) {\n    this.toggleDisabled(group, false);\n  }\n\n  toggleDisabled(group, enabled) {\n    this.inputElements(group).forEach(elem => elem.disabled = !enabled);\n  }\n\n  inputElements(group) {\n    return group.querySelectorAll('input, select, textarea, button')\n  }\n\n  findGroups(toggler) {\n    let value = this.getValue(toggler);\n    if (!value) {\n      return [];\n    } else {\n      return this.groups.filter(group => this.isMatch(group, toggler.name, value));\n    }\n  }\n\n  getValue(toggler) {\n    if (toggler.matches('select')) {\n      return toggler.options[toggler.selectedIndex].value;\n    } else if (toggler.matches('input[type=checkbox]')) {\n      return toggler.checked ? toggler.value : null;\n    } else if (toggler.matches('input[type=radio]')) {\n      let checked = this.scope.findElement(`input[type=radio][name=\"${toggler.name}\"]:checked`);\n      return checked ? checked.value : null;\n    }\n  }\n\n  isMatch(group, togglerName, togglerValue) {\n    let set = new GroupIDSet(group.getAttribute('data-form-group-id'));\n    return set.nameValues.some(([name, value]) => {\n      return (!name || name == togglerName) && value == togglerValue\n    });\n  }\n}\n\nclass GroupIDSet {\n  constructor(idset) {\n    this.idset = idset;\n    this.ids = this.parse(idset);\n  }\n\n  get nameValues() {\n    return this.ids.map(id => this.parseID(id));\n  }\n\n  parse(idset) {\n    if (idset.startsWith('[')) {\n      return [].concat(this.parseJSON(idset));\n    } else {\n      return [].concat(idset);\n    }\n  }\n\n  parseID(id) {\n    if (id.includes(':')) {\n      return id.split(':', 2)\n    } else {\n      return [null, id];\n    }\n  }\n\n  parseJSON(str) {\n    try {\n      return JSON.parse(str);\n    } catch(error) {\n      return str;\n    }\n  }\n}\n"],"names":["_Class","Controller","groups","this","scope","findAllElements","togglers","context","bindingObserver","bindings","filter","binding","action","methodName","map","element","connect","toggleGroups","toggle","e","transition","onGroups","flatMap","toggler","findGroups","forEach","group","includes","on","off","modeValue","enable","show","disable","hide","classList","contains","style","height","removeEventListener","transitionEnd","addEventListener","setTimeout","scrollHeight","add","remove","target","toggleDisabled","enabled","inputElements","elem","disabled","querySelectorAll","value","getValue","isMatch","name","matches","options","selectedIndex","checked","findElement","togglerName","togglerValue","GroupIDSet","getAttribute","nameValues","some","_ref","values","mode","String","constructor","idset","ids","parse","id","parseID","startsWith","concat","parseJSON","split","str","JSON","error"],"mappings":"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"}