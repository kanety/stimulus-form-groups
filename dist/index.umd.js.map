{"version":3,"file":"index.umd.js","sources":["../src/index.js"],"sourcesContent":["import { Controller } from '@hotwired/stimulus';\nimport './index.scss';\n\nexport default class extends Controller {\n  static values = {\n    mode: String\n  };\n\n  get groups() {\n    return this.scope.findAllElements('[data-form-group-id]');\n  }\n\n  get togglers() {\n    return this.context.bindingObserver.bindings\n               .filter(binding => binding.action.methodName == 'toggle')\n               .map(binding => binding.action.element);\n  }\n\n  connect() {\n    this.enableTrans(false);\n    this.toggleGroups();\n    setTimeout(() => this.enableTrans(true), 200);\n  }\n\n  enableTrans(enabled) {\n    if (enabled) {\n      this.element.classList.remove('st-form-groups--disable-trans')\n    } else {\n      this.element.classList.add('st-form-groups--disable-trans')\n    }\n  }\n\n  toggle(e) {\n    this.toggleGroups();\n  }\n\n  toggleGroups() {\n    let targetGroups = this.togglers.flatMap(toggler => this.findGroups(toggler));\n    this.groups.forEach(group => this.toggleGroup(group, targetGroups.includes(group)));\n  }\n\n  toggleGroup(group, flag) {\n    if (this.modeValue == 'disabled') {\n      return this.toggleDisabled(group, flag);\n    } else {\n      return this.toggleVisible(group, flag);\n    }\n  }\n\n  toggleVisible(group, visible) {\n    if (visible) {\n      group.style.height = group.scrollHeight + 'px';\n      group.classList.add('st-form-groups__group--visible');\n    } else {\n      group.style.height = '0px';\n      group.classList.remove('st-form-groups__group--visible');\n    }\n  }\n\n  toggleDisabled(group, enabled) {\n    this.inputElements(group).forEach(elem => elem.disabled = !enabled);\n  }\n\n  inputElements(group) {\n    return group.querySelectorAll('input, select, textarea, button')\n  }\n\n  findGroups(target) {\n    let value = this.getValue(target);\n    if (!value) {\n      return [];\n    } else {\n      return this.groups.filter(group => this.isMatch(group, target.name, value));\n    }\n  }\n\n  isMatch(group, targetName, targetValue) {\n    return this.extractIDs(group.getAttribute('data-form-group-id')).some(id => {\n      let [name, value] = this.extractNameValue(id);\n      return (!name || name == targetName) && value == targetValue\n    });\n  }\n\n  getValue(target) {\n    if (target.matches('select')) {\n      return target.options[target.selectedIndex].value;\n    } else if (target.matches('input[type=checkbox]')) {\n      return target.checked ? target.value : null;\n    } else if (target.matches('input[type=radio]')) {\n      let checked = this.scope.findElement(`input[type=radio][name=\"${target.name}\"]:checked`);\n      return checked ? checked.value : null;\n    }\n  }\n\n  extractIDs(str) {\n    if (str.startsWith('[')) {\n      return [].concat(this.parseJSON(str));\n    } else {\n      return [].concat(str);\n    }\n  }\n\n  extractNameValue(id) {\n    if (id.includes(':')) {\n      return id.split(':', 2)\n    } else {\n      return [null, id];\n    }\n  }\n\n  parseJSON(str) {\n    try {\n      return JSON.parse(str);\n    } catch(error) {\n      return str;\n    }\n  }\n}\n"],"names":["Controller","groups","scope","findAllElements","togglers","context","bindingObserver","bindings","filter","binding","action","methodName","map","element","connect","this","enableTrans","toggleGroups","setTimeout","enabled","classList","remove","add","toggle","e","targetGroups","flatMap","toggler","findGroups","forEach","group","toggleGroup","includes","flag","modeValue","toggleDisabled","toggleVisible","visible","style","height","scrollHeight","inputElements","elem","disabled","querySelectorAll","target","value","getValue","isMatch","name","targetName","targetValue","extractIDs","getAttribute","some","id","extractNameValue","matches","options","selectedIndex","checked","findElement","str","startsWith","concat","parseJSON","split","JSON","parse","error","values","mode","String"],"mappings":"mTAG6BA,aAKvBC,aACF,YAAYC,MAAMC,gBAAgB,wBAGhCC,eACF,YAAYC,QAAQC,gBAAgBC,SACxBC,OAAOC,GAAwC,UAA7BA,EAAQC,OAAOC,YACjCC,IAAIH,GAAWA,EAAQC,OAAOG,SAG5CC,UACEC,KAAKC,aAAY,GACjBD,KAAKE,eACLC,WAAW,IAAMH,KAAKC,aAAY,GAAO,KAG3CA,YAAYG,GACNA,EACFJ,KAAKF,QAAQO,UAAUC,OAAO,iCAE9BN,KAAKF,QAAQO,UAAUE,IAAI,iCAI/BC,OAAOC,GACLT,KAAKE,eAGPA,eACE,IAAIQ,EAAeV,KAAKX,SAASsB,QAAQC,GAAWZ,KAAKa,WAAWD,IACpEZ,KAAKd,OAAO4B,QAAQC,GAASf,KAAKgB,YAAYD,EAAOL,EAAaO,SAASF,KAG7EC,YAAYD,EAAOG,GACjB,MAAsB,YAAlBlB,KAAKmB,eACKC,eAAeL,EAAOG,QAEtBG,cAAcN,EAAOG,GAIrCG,cAAcN,EAAOO,GACfA,GACFP,EAAMQ,MAAMC,OAAST,EAAMU,aAAe,KAC1CV,EAAMV,UAAUE,IAAI,oCAEpBQ,EAAMQ,MAAMC,OAAS,MACrBT,EAAMV,UAAUC,OAAO,mCAI3Bc,eAAeL,EAAOX,GACpBJ,KAAK0B,cAAcX,GAAOD,QAAQa,GAAQA,EAAKC,UAAYxB,GAG7DsB,cAAcX,GACZ,OAAOA,EAAMc,iBAAiB,mCAGhChB,WAAWiB,GACT,IAAIC,EAAQ/B,KAAKgC,SAASF,GAC1B,OAAKC,OAGS7C,OAAOO,OAAOsB,GAASf,KAAKiC,QAAQlB,EAAOe,EAAOI,KAAMH,IAF7D,GAMXE,QAAQlB,EAAOoB,EAAYC,GACzB,YAAYC,WAAWtB,EAAMuB,aAAa,uBAAuBC,KAAKC,IACpE,IAAKN,EAAMH,GAAS/B,KAAKyC,iBAAiBD,GAC1C,QAASN,GAAQA,GAAQC,IAAeJ,GAASK,IAIrDJ,SAASF,GACP,GAAIA,EAAOY,QAAQ,UACjB,OAAOZ,EAAOa,QAAQb,EAAOc,eAAeb,SACnCD,EAAOY,QAAQ,wBACxB,OAAOZ,EAAOe,QAAUf,EAAOC,MAAQ,QAC9BD,EAAOY,QAAQ,qBAAsB,CAC9C,IAAIG,EAAU7C,KAAKb,MAAM2D,uCAAuChB,EAAOI,mBACvE,OAAOW,EAAUA,EAAQd,MAAQ,MAIrCM,WAAWU,GACT,OAAIA,EAAIC,WAAW,KACV,GAAGC,OAAOjD,KAAKkD,UAAUH,IAEzB,GAAGE,OAAOF,GAIrBN,iBAAiBD,GACf,OAAIA,EAAGvB,SAAS,KACPuB,EAAGW,MAAM,IAAK,GAEd,CAAC,KAAMX,GAIlBU,UAAUH,GACR,IACE,OAAOK,KAAKC,MAAMN,GAClB,MAAMO,GACN,OAAOP,aA9GJQ,OAAS,CACdC,KAAMC"}